name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    # Especificar o environment
    environment: TEST

    steps:
    # Passo 1: Checkout do repositório
    - uses: actions/checkout@v4

    # Passo 2: Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    # Passo 3: Instalar Poetry
    - name: Install Poetry
      run: |
        pip install poetry

    # Passo 4: Instalar dependências
    - name: Install dependencies
      run: |
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi --no-root --with dev

    # Passo 5: Executar testes
    - name: Run tests
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
        ACCESS_TOKEN_EXPIRE_MINUTES: ${{ vars.ACCESS_TOKEN_EXPIRE_MINUTES }}
        RESET_PASSWORD_TOKEN_EXPIRE_MINUTES: ${{ vars.RESET_PASSWORD_TOKEN_EXPIRE_MINUTES }}
        TOKEN_URL: ${{ vars.TOKEN_URL }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
        SMTP_PORT: ${{ vars.SMTP_PORT }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
        FRONTEND_URL: ${{ vars.FRONTEND_URL }}
        SMTP_FROM_EMAIL: ${{ vars.SMTP_FROM_EMAIL }}
      run: |
        poetry run pytest

    # Passo 6: Executar linting
    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics